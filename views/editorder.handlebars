{{#section 'title'}}
	<title>代客下单</title>
{{/section}}
<div class="container" id="order">
	<form id="orderform" class="needs-validation" @submit.prevent="validateBeforeSubmit">
		<div class="form-row">
            <div class="form-group">
                <label for="productName">选布</label>
                <input type="text" id="productName" autocomplete="off" name="productName" :class="{'is-invalid': errors.has('productID'),'form-control':true}" data-vv-delay="500" v-model="productName" v-validate="'required'" >
                <input type="hidden" v-model="productID" name="productID">
                <i v-show="errors.has('productName')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('productName')" class="help text-danger">\{{ errors.first('productName') }}</span>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <label for="UserWeiXinID">微信号</label>
                <input type="text" name="UserWeiXinID" :class="{'is-invalid': errors.has('UserWeiXinID'),'form-control':true}" data-vv-delay="500" v-model="UserWeiXinID" v-validate="'required'" >
                <i v-show="errors.has('UserWeiXinID')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('UserWeiXinID')" class="help text-danger">\{{ errors.first('userID') }}</span>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="number">米数</label>
                <input type="number" :class="{'is-invalid': errors.has('number')}" data-vv-delay="500" v-model="number" v-validate="'required|numeric'" class="form-control" name="number">
                <i v-show="errors.has('number')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('number')" class="help text-danger">\{{ errors.first('number') }}</span>
            </div>
            <div class="form-group col-md-6">
            	<div v-if="totalPrice>0">
            	*<label>\{{price}}</label>=<label>\{{totalPrice}}</label>
            	</div>
            </div>
        </div>
        <button class="btn btn-primary" type="submit">保存</button>
	</form>
</div>
<script type="text/x-handlebars-template" id="resultTemplate">
	<div class="card w-90">
		<img class="card-img-top" src="{{{ImgUrl}}}">
		<div class="card-body">
			<div class="card-title">{{{Remark}}}</div>
			<div class="card-text">{{{ProductName}}}</div>
		</div>
	</div>
</script>
{{#section 'jquery'}}
    <!--typeahead-->
    <script src="https://cdn.bootcss.com/typeahead.js/0.11.1/bloodhound.min.js"></script>
    <script src="https://cdn.bootcss.com/typeahead.js/0.11.1/typeahead.bundle.js"></script>
    <script src="https://cdn.bootcss.com/typeahead.js/0.11.1/typeahead.jquery.js"></script>
    <!--typeahead-->
    <script src="https://cdn.bootcss.com/handlebars.js/4.0.11/handlebars.min.js"></script>
	<script type="text/javascript">

		var controlUrl="/order/";
	    Vue.use(VeeValidate,{locale: 'zh_CN'});

	    var vm=new Vue({
	    	 el: "#order",
	    	 data:{
                productName:'',
	    	 	productID:0,
                UserWeiXinID:'',
	    	 	number:0,
	    	 	price:0,
                totalPrice:0
	    	 },
	    	 methods:{
	    	 	validateBeforeSubmit:function () {
                this.$validator.validateAll().then((result) => {
                    if (result) {
                      //this.saveRows();
                      console.log("success");
                      return;
                    }
                  });
            	},
            	add:function () {
            		
            	}
	    	 }
	    });
        $(function () {
             //远程数据源
	        var prefetch_product = new Bloodhound({
	            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('ProductName'),
	            queryTokenizer: Bloodhound.tokenizers.whitespace,
	            // 一次取所有数据
	            prefetch: '/product/getProductAll?q=%QUERYALLjson'
	        });

	        prefetch_product.initialize();
	        prefetch_product.get('0')
	        $('#productName').typeahead(null, {
	            name: 'productInfo',
	            displayKey: 'ProductName',
	            source: prefetch_product.ttAdapter(),
	            templates:{
	            	empty:['<div class="empty">没找到相关产品信息</div>'].join('\n'),
	            	suggestion:Handlebars.compile($("#resultTemplate").html())
	            }
	        });

        });
	</script>
{{/section}}