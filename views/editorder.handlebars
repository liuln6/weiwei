{{#section 'title'}}
	<title>代客下单</title>
{{/section}}
<div class="container-fluid" id="order">
	<form id="orderform" class="needs-validation" @submit.prevent="validateBeforeSubmit">
		<div class="form-group row">
            <label for="productName" class="col-3 col-form-label text-right">选布</label>
            <div class="col-9">
	            <input type="text" id="productName" autocomplete="off" style="width:300px;" name="productName" :class="{'is-invalid': errors.has('productID'),'form-control':true}" data-vv-delay="500" v-model="productName" v-validate="'required'" >
	            <span v-if="typeName!=''">\{{typeName}}</span>
	            <input type="hidden" v-model="productID" name="productID">
	            <i v-show="errors.has('productName')" class="fa text-danger fa-warning"></i>
	            <span v-show="errors.has('productName')" class="help text-danger">\{{ errors.first('productName') }}</span>
            </div>
        </div>
        <div class="form-group row">
            <label for="number" class="col-3 col-form-label text-right">米数</label>
            <div class="col-9">
                <input type="text" :class="{'is-invalid': errors.has('number')}" data-vv-delay="500" v-model="number" v-validate="'required|decimal'" class="form-control" name="number">
                <i v-show="errors.has('number')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('number')" class="help text-danger">\{{ errors.first('number') }}</span>
            </div>
        </div>
        <div class="form-row" v-if="productID>0&&number>0">
        	 <label class="col-3 col-form-label text-right"></label>
        	<div class="form-group col-9">
            	<span v-if="price>0">
            		<label>\{{number}}</label>*<label>\{{price}}</label>=<label>\{{totalPrice}}</label>
            	</span>
            </div>
        </div>
        <div class="form-group row">
            <label for="UserWeiXinID" class="col-3 col-form-label text-right">微信名</label>
            <div class="col-9">
                <input type="text" name="userWeiXinName" style="width:300px;" id="userWeiXinName" :class="{'is-invalid': errors.has('userWeiXinName'),'form-control':true}" data-vv-delay="500" v-model="userWeiXinName" v-validate="'required'">
                <i v-show="errors.has('userWeiXinName')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('userWeiXinName')" class="help text-danger">\{{ errors.first('userWeiXinName') }}</span>
            </div>
        </div>
        <div class="form-group row">
            <label for="remark" class="col-3 col-form-label text-right">备注</label>
            <div class="col-9">
                <input type="text" name="remark" style="width:300px;" id="remark" class="form-control" v-model="remark" >
            </div>
        </div>
        <div class="form-group row">
	        <div class="col-3"></div>
	        <div class="col-9">
	        	<button class="btn btn-primary" type="submit">保存</button>
	        </div>
        </div>
	</form>
	<table id="orderList" class="table table-striped table-bordered table-sm" style="width:100%">
    </table>
</div>
<script type="text/x-handlebars-template" id="resultTemplate">
	<div class="row bg-white" style="padding:4px;">
		<div class="col-4 pr-0">
			<img class="figure-img img-thumbnail rounded" src="/\{{ImgUrl}}">
		</div>
		<div class="col-8">
			<div>\{{ProductName}}-\{{TypeName}}|库存（\{{StockNumber}}）</div>
		</div>
	</div>
	<div class="h8"></dic>
</script>
<script type="text/x-handlebars-template" id="userTemp">
	<li class="list-group-item" style="width:300px;">\{{WeiXinName}}-\{{UserName}}-\{{ID}}</li>
</script>
{{#section 'jquery'}}
    <!--typeahead-->
    <script src="https://cdn.bootcss.com/typeahead.js/0.11.1/bloodhound.min.js"></script>
    <script src="https://cdn.bootcss.com/typeahead.js/0.11.1/typeahead.bundle.js"></script>
    <script src="https://cdn.bootcss.com/typeahead.js/0.11.1/typeahead.jquery.js"></script>
    <!--typeahead-->
    <script src="https://cdn.bootcss.com/handlebars.js/4.0.11/handlebars.min.js"></script>
	<script type="text/javascript">

		var controlUrl="/order/";
	    Vue.use(VeeValidate,{locale: 'zh_CN'});
	    var vm=new Vue({
	    	 el: "#order",
	    	 data:{
                productName:'',
	    	 	productID:0,
	    	 	typeID:0,
	    	 	typeName:'',
                userWeiXinID:'',
                userID:'',
                userWeiXinName:'',
                userName:'',
	    	 	number:0,
	    	 	price:0,
                totalPrice:0,
                stockNumber:0,
                remark:''
	    	 },
	    	 methods:{
	    	 	validateBeforeSubmit:function () {
                this.$validator.validateAll().then((result) => {
                    if (result) {
                      this.save();
                      console.log("success");
                      return;
                    }
                  });
            	},
            	save:function () {
            		var order={
                        productName:vm.productName,
                        productID:parseFloat(vm.productID),
                        typeID:parseFloat(vm.typeID),
                        userWeiXinID:vm.userWeiXinID,
                        userID:vm.userID,
                        userWeiXinName:vm.userWeiXinName,
                        userName:vm.userName,
                        number:parseFloat(vm.number),
                        price:parseFloat(vm.price),
                        totalPrice:parseFloat(vm.totalPrice),
                        remark:vm.remark
                    };
                    swal({title:"<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i><span class=\"sr-only\">Loading...</span>数据处理中，请稍后"});
                    axios.post(controlUrl+'add',order)
                    .then(function (response) {
						var row={
                                ID:response.data.orderID,
                                WeiXinName:vm.userName,
                                ProductName:vm.productName,
                                Price:vm.price,
                                Number:vm.number,
                                TotalPrice:vm.totalPrice,
                                Remark:vm.remark,
                                UserID:vm.userID,
                                ProductID:vm.productID,
                                TypeID:vm.typeID,
                                TypeName:vm.typeName
                            };
                        $('#orderList').DataTable().row.add(row).draw();

                        $('#orderform')[0].reset();
                        swal.close();
                        vm.productName='';
	    	 			vm.productID=0;
	    	 			vm.typeID=0;
	    	 			vm.typeName='';
                		vm.userWeiXinID='';
                		vm.userID='';
		                vm.userWeiXinName='';
		                vm.userName='';
			    	 	vm.number=0;
			    	 	vm.price=0;
		                vm.totalPrice=0;
		                vm.stockNumber=0;
		                vm.remark='';
                        toastr.success('数据添加成功了，恭喜亲~', '')
                    })
                    .catch(function (error) {
                        swal.close();
                        console.log(error);
                        toastr.error('下单失败了，亲稍等，截图联系管理员~', '')

                    }); 
            	}
	    	 },
	         watch: {
	            'number':function newRowWID() {
	               this.totalPrice=(parseFloat(this.number)*this.price).toFixed(2);
	            }
	        }
	    });
        $(function () {
             //远程数据源  产品列表
	        var prefetch_product = new Bloodhound({
	            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('ProductName'),
	            queryTokenizer: Bloodhound.tokenizers.whitespace,
	            // 一次取所有数据
	            //prefetch: '/product/getProductAll',
	            remote:{
	            	url:'/product/getProductAllByName?q=%QUERY',
	            	wildcard:'%QUERY'
	            }
	        });

	        prefetch_product.initialize();
	        //prefetch_product.get('0999')
	        $('#productName').typeahead(null, {
	            name: 'productInfo',
	            displayKey: 'ProductName',
	            source: prefetch_product.ttAdapter(),
	            templates:{
	            	empty:['<div class="empty">没找到相关产品信息</div>'].join('\n'),
	            	suggestion: Handlebars.compile($("#resultTemplate").html())
	            }
	        })
			$('#productName').bind('typeahead:select', function(ev, row) {
				vm.productName=row.ProductName;
				vm.productID=row.PID;
				vm.typeID=row.TypeID;
				vm.typeName=row.TypeName;
				vm.price=row.Price;
                vm.stockNumber=row.TotalNumber-row.UsedNumber;
			});

            //远程数据源 用户
            var prefetch_user=new Bloodhound({
                datumTokenizer:Bloodhound.tokenizers.obj.whitespace('WeiXinName'),
                queryTokenizer:Bloodhound.tokenizers.whitespace,
                prefetch:'/user/getAllUser',
                remote:{
	            	url:'/user/getAllUserByName?q=%QUERY',
	            	wildcard:'%QUERY'
	            }
            });
            prefetch_user.initialize();
            //prefetch_user.get('Janny');
            $('#userWeiXinName').typeahead(null, {
                name: 'userInfo',
                displayKey: 'WeiXinName',
                source: prefetch_user.ttAdapter(),
                templates:{
                    empty:['<div class="empty">没找到相关产品信息 <a class="btn btn-primary btn-sm" href="/user" role="button">新增用户</a></div>'].join('\n'),
                    suggestion: Handlebars.compile($("#userTemp").html())
                }
            });
            $('#userWeiXinName').bind('typeahead:select', function(ev, row) {
                vm.userName=row.UserName;
                vm.userID=row.ID;
                vm.userWeiXinID=row.WeiXinID;
                vm.userWeiXinName=row.WeiXinName;
            });

            var table=$('#orderList').DataTable({
		        language: {
		            url: '/script/Chinese.json'
		        },
		        "lengthMenu": [[25, 50, -1], [25, 50, "All"]],
		        ajax:{
		            url:'/order/queryAllNoPack' ,
		            "dataSrc": ""
		        },
		        columns:[
		            {
		                data:'ID',
		                title:'ID'
		            },
		            {
		                data:'WeiXinName',
		                title:'微信名'
		            },
		            {
		                data:'UserID',
		                title:'用户ID',
		                visible:false
		            },
		            {
		                data:'ProductName',
		                title:'名称'
		            },
		            {
		                data:'ProductID',
		                title:'产品ID',
                        visible:false
		            },
		            {
		                data:'TypeName',
		                title:'颜色'
		            },
		            {
		                data:'TypeID',
		                title:'颜色ID',
                        visible:false
		            },
		            {
		                data:'Price',
		                title:'单价'
		            },
		            {
		                data:'Number',
		                title:'数量'
		            },
		            {
		                data:'TotalPrice',
		                title:'总价'
		            },
		            {
		                data:'Remark',
		                title:'备注'
		            },
		            {
		            	data:null,
			    		title:'操作',
			    		render:function (data,type,row) {
			    			var html="";
			    			if(row.OrderStatu==30){
			    				html='<button type="button" class="btn btn-info btn-sm" onclick="DelOrder(\''+row.ID+'\',\''+row.TypeID+'\')">删除</button>';
			    			}
			    			return html;
			    		}
		            }             
		        ]
		    });
		    table
		    .order( [ 0, 'desc' ] )
		    .draw();
        });
        function DelOrder(ID,TypeID) {

        	swal({ 
				  title: '确定删除吗？', 
				  text: '你将无法恢复它！', 
				  type: 'warning',
				  showCancelButton: true, 
				  confirmButtonColor: '#3085d6',
				  cancelButtonColor: '#d33',
				  confirmButtonText: '确定删除！', 
				}).then(function(){
					swal({title:"<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i><span class=\"sr-only\">Loading...</span>数据处理中，请稍后"});
	    			axios.post('/order/delOrder',{ID:parseInt(ID),TypeID:parseInt(TypeID)})
	                .then(function (response) {
	                    swal.close();
	                    
	                    toastr.success('订单删除成功了，恭喜亲~', '')
	                })
	                .catch(function (error) {
	                    swal.close();
	                    console.log(error);
	                    toastr.error('删除失败了，亲稍等，截图联系管理员~', '')

	                });
				})
        }
	</script>
{{/section}}