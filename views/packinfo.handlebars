{{#section 'title'}}
	<title>{{title}}</title>
{{/section}}
<div class="container-fluid" id="orderList">
	<div class="text-center"><h3>\{{ProductName}}-\{{TypeName}}</h3></div>
	<table class="table table-hover table-sm table-striped">
	  <thead>
	    <tr>
	      <th scope="col">#</th>
	      <th scope="col">用户</th>
	      <th scope="col">单价</th>
	      <th scope="col">数量</th>
	      <th scope="col">总价</th>
	      <th scope="col">备注</th>
	      <th scope="col">操作</th>
	    </tr>
	  </thead>
	  <tbody>
	    <tr v-for="(item,index) in OrderList" v-model="OrderList">
	      <th scope="row">\{{item.ID}}</th>
	      <td>\{{item.UserID}}-\{{item.WeiXinName}}</td>
	      <td>
	      	\{{item.Price}}
	      </td>
	      <td>
	      	<div class="detail">\{{item.Number}}</div>
	      
	      </td>
	      <td>
	      \{{item.TotalPrice}}
	      </td>
	      <td>\{{item.Remark}}</td>
	      <td>
	      	<!--<button type="button" class="btn btn-sm btn-danger">调整</button>-->
	      	<button type="button" class="btn btn-sm btn-danger" @click="delOrder(item)">删除</button>
	      </td>
	    </tr>
	  </tbody>
	</table>
</div>
{{#section 'jquery'}}
	<script type="text/javascript">
	var vm=new Vue({
    	el:"#orderList",
    	data:{
    		ProductName:'',
    		ProductID:'',
    		TypeID:{{id}},
    		TypeName:'',
    		TotalNumber:0,
    		OrderList:[{
    			ID: 73,
		        ProductID: 46,
		       OrderNO: '20188246',
		       Price: 30,
		       UserID: 72,
		       IsBalance: 0,
		       InputTime: '2018-08-14T13:54:41.629Z',
		       TotalPrice: 60,
		       Number: 2,
		       IsPack: 0,
		       IsPost: 0,
		       PostCode: '',
		       BalanceTime: null,
		       PackTime: null,
		       PostTime: null,
		       UserWeiXinID: 'weixinID',
		       TypeID: 23,
		       Remark: '',
		       WeiXinName: 'Fiona Miss'
    		}]
    	},
    	methods:{
    		validateBeforeSubmit:function () {
                this.$validator.validateAll().then((result) => {
                    
                  });
            }
    		,delOrder:function (obj) {
    			swal({title:"<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i><span class=\"sr-only\">Loading...</span>数据处理中，请稍后"});
    			axios.post('/order/delOrder',{ID:parseInt(obj.ID),TypeID:parseInt(vm.TypeID)})
                    .then(function (response) {
						vm.OrderList.splice(obj,1);
                        swal.close();
                        
                        toastr.success('订单删除成功了，恭喜亲~', '')
                    })
                    .catch(function (error) {
                        swal.close();
                        console.log(error);
                        toastr.error('删除失败了，亲稍等，截图联系管理员~', '')

                    }); 
    		}
    	}
    });
	$(function () {
		getProductInfo();
	});
	function getProductInfo() {
		var ID={{id}};
		axios.post('/product/packinfo',{ID:ID})
	    .then(function (response) {
	    	var model=response.data.model;
	    	
	        vm.TypeID=model.ID;
	        vm.Price=model.Price;
	        vm.ProductID=model.ProductID;
	        vm.ProductName=model.ProductName;
	        vm.TypeName=model.Remark;
	        vm.TotalNumber=model.TotalNumber;
	        vm.OrderList=[];
	        $.each(model.OrderList,function (index,item) {
	        	vm.OrderList.push(item);
	        });
	    })
	    .catch(function (error) {
	        console.log(error);
	    }); 
	}
	</script>
{{/section}}
