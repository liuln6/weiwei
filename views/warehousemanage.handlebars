
{{#section 'title'}}<title>薇小助手</title>
<link href="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/css/jquery.fileupload-ui-noscript.min.css" rel="stylesheet">
<link href="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/css/jquery.fileupload.min.css" rel="stylesheet">
{{/section}}
<div class="container" id="AddWare">
    <div class="row mx-auto w-75" style="margin-top: 20px">
        <div class="col-12 text-center">
            <h3>编辑信息</h3>
        </div>
    </div>

    <div class="row">
       <span class="btn btn-success fileinput-button">
        <i class="glyphicon glyphicon-plus"></i>
        <span>选择图片</span>
        <!-- The file input field used as target for the file upload widget -->
        <input id="fileupload" type="file" name="files[]" multiple="">
        </span>
        <div id="files"></div>
    </div>

    <div class="row w-100">
        <select class="selectstock w-100" name="WID2" id="WID2" v-model="newRow.WID" ></select>
    </div>
    <div>
        <span>\{{newRow.WID}}</span>
    </div>
    <div class="row">
    选择人
    </div>
    <div class="row">
    totalnumber
    </div>
    <div class="row">
    price
    </div>
    <div class="row">
    remark
    </div>
</div>
{{#section 'jquery'}}
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/vendor/jquery.ui.widget.min.js"></script>
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/jquery.iframe-transport.min.js"></script>
<!-- The basic File Upload plugin -->
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/jquery.fileupload.min.js"></script>
<script>

       var datas = [
        {
            id:0,
            code: "A2017-001",
            name: "3800充电器",
            states: "正常",
            date: "2017-01-21",
            admin: "andy"
        },
        {
            id:1,
            code: "A2017-002",
            name: "Lenovo Type-c转接器",
            states: "正常",
            date: "2017-01-21",
            admin: "zero"
        }];


    var vm=new Vue({
        el: "#AddWare",
        data: {
            checkAll: false,
            checkedRows: [],
            facilities: datas,
            newRow:{
                WID:2
            },
            warehouselist:[],
        },
        methods: {
            addRow: function () {
                this.facilities.push(this.newRow);
                this.newRow = {};
            },
            saveRows:function () {//保存表格数据
                
            },
            delRows:function () {
                if (this.checkedRows.length <= 0){
                    alert("您未选择需要删除的数据");
                    return false;
                }
                if (!confirm("您确定要删除选择的数据吗？")){
                    return false;
                }

                for(var i=0;i<this.checkedRows.length;i++){
                    var checkedRowIndex = this.checkedRows[i];
                    this.facilities = $.grep(this.facilities,function (facility,j) {
                        return j != checkedRowIndex;
                    });
                }
                this.checkedRows = [];
            }
        },
        watch: {
            'newRow.WID':function newRowWID() {
               $(".selectstock").select2('val', this.newRow.WID);
            }
        }
    });
      

 $(function () {

GetWeiStockList() ;
var $selectStock=$('.selectstock').select2({
  ajax: {
    url: '/warehousemanage/getwarehouselistdata',
    dataType: 'json',
    // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
    processResults: function (data, params) {
    params.page = params.page || 1;

        return {
            results: data.results,
            pagination: {
                more: (params.page * 10) < data.count_filtered
            }
        };
    }
  }
});
$(".selectstock").select2('val', "2");
$('.selectstock').on("select2:select",function (e) {
    vm.newRow.WID=$(".selectstock").select2('val');
});
$('#fileupload').fileupload({
    url: '/upload',
    dataType: 'json',
    //autoUpload: false,
    //acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
    maxFileSize: 5000000, // 5 MB
    // Enable image resizing, except for Android and Opera,
    // which actually support image resizing, but fail to
    // send Blob objects via XHR requests:
    disableImageResize: /Android(?!.*Chrome)|Opera/
        .test(window.navigator.userAgent),
    previewMaxWidth: 100,
    previewMaxHeight: 100,
    previewCrop: true
}).on('fileuploadadd', function (e, data) {
    data.context = $('<div/>').appendTo('#files');
    $.each(data.files, function (index, file) {
        var node = $('<p/>')
                .append($('<span/>').text(file.name));
        //if (!index) {
        //    node
        //        .append('<br>')
        //        .append(uploadButton.clone(true).data(data));
        //}
        node.appendTo(data.context);
    });
}).on('fileuploadprocessalways', function (e, data) {
    var index = data.index,
        file = data.files[index],
        node = $(data.context.children()[index]);
    if (file.preview) {
        node
            .prepend('<br>')
            .prepend(file.preview);
    }
    if (file.error) {
        node
            .append('<br>')
            .append($('<span class="text-danger"/>').text(file.error));
    }
    if (index + 1 === data.files.length) {
        data.context.find('button')
            .text('Upload')
            .prop('disabled', !!data.files.error);
    }
}).on('fileuploadprogressall', function (e, data) {
    var progress = parseInt(data.loaded / data.total * 100, 10);
    $('#progress .progress-bar').css(
        'width',
        progress + '%'
    );
}).on('fileuploaddone', function (e, data) {
    $.each(data.result.files, function (index, file) {
        if (file.url) {
            var link = $('<a>')
                .attr('target', '_blank')
                .prop('href', file.url);
            $(data.context.children()[index])
                .wrap(link);
        } else if (file.error) {
            var error = $('<span class="text-danger"/>').text(file.error);
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        }
    });
}).on('fileuploadfail', function (e, data) {
    $.each(data.files, function (index, file) {
        var error = $('<span class="text-danger"/>').text('File upload failed.');
        $(data.context.children()[index])
            .append('<br>')
            .append(error);
    });
}).prop('disabled', !$.support.fileInput)
    .parent().addClass($.support.fileInput ? undefined : 'disabled');
}); 
    function GetWeiStockList() {
            $.ajax({
                url: '/warehousemanage/getwarehouselist',
                dataType: 'json',
                type: 'get',
                data: {
                    test: 'ajax'
                },
                success: function (data) {
                    console.log(data);
                    vm.warehouselist=[];
                    $.each(data.result.rows,function (i,obj) {
                        vm.warehouselist.push(obj);
                    });
                    vm.newRow.WID=2;
                }
            })
        };
</script>
{{/section}}
