
{{#section 'title'}}<title>薇小助手</title>
<link href="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/css/jquery.fileupload-ui-noscript.min.css" rel="stylesheet">
<link href="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/css/jquery.fileupload.min.css" rel="stylesheet">
{{/section}}
<div class="container" id="AddWare">
    <div class="row text-center">
       <span class="btn imageAdd fileinput-button col align-self-center">
            <span class="fa-stack fa-3x">
              <span class="fa fa-square-o fa-stack-2x"></span>
              <span class="fa fa-plus fa-stack-1x"></span></br>
              点击上传
            </span>
            <!-- The file input field used as target for the file upload widget -->
            <input id="fileupload" type="file" name="files[]" required="" data-validation-required-message="请上传图片" multiple="">
        </span>
    </div>
    <div class="row" v-model="productImage">
        <div class="card float-left w-25" v-for="(item,index) in productImage">
            <img class="card-img-top" :src="item.url" :alt="item.name" >
            <div class="p-2">
                <div class="form-group col-md-4">
                    <label :for="'totalNumber_'+index" class="text-muted">米数</label>
                    <input type="number" min="0" :name="'totalNumber_'+index" :value="item.totalNum" class="w-100" data-validation-required-message=“*”>
                </div>  
                <div class="form-group col-md-4">
                    <label :for="'price_'+index" class="text-muted">价格</label>
                    <input type="num" min="0" :name="'price_'+index" :value="item.price" data-validation-required-message=“*” class="w-100">
                </div>
                <div class="form-group col-md-4">
                    <label :for="'mark_'+index" class="text-muted">标识</label>
                    <input type="text" :name="'mark_'+index" :value="item.mark" data-validation-required-message=“*” placeholder="颜色" class="w-100">
                </div>  
            </div>
        </div>
    </div>
    <!--
    <div class="form-row float-none">
        <label for="WID">选择仓库</label>
        <select class="selectstock w-100" name="WID" id="WID" v-model="newRow.WID" ></select>
    </div>
    -->
    <div class="form-row">
        <div class="control-group col-md-4">
            <label class="control-label" for="No">编号<p class="help-block"></p></label>
            <div class="control-s">
                <input type="text" v-model="newRow.No" data-validation-required-message=“*” required="" class="form-control" name="No">
            </div>
        </div>
        <div class="form-group col-md-8">
            <label >仓库</label>
            <div class="">
                <div class="form-check form-check-inline" v-for="(ware,wareIndex) in warehouselist">
                  <input class="form-check-input" v-model="newRow.WID" type="radio" name="warehouseSelect" v-bind:value="ware.ID" v-bind:id="'warehouse_'+wareIndex">
                  <label class="form-check-label" :for="'warehouse_'+wareIndex">\{{ware.Name}}</label>
                </div>
            </div>
        </div>
    </div>
    
    <div class="form-row">
        <div class="form-group">
            <label for="Remark">描述信息</label>
            <textarea name="Remark" v-model="newRow.Remark" class="form-control" required=""></textarea>
        </div>
    </div>
    <button class="btn btn-primary" type="submit">保存</button>
    <!-- 模态框 -->
    <div class="modal fade" id="selectColor">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">选择颜色类型</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group">           
                            <lable role="button" for='TotalNumberDark'  class="btn btn-dark">&nbsp;&nbsp;&nbsp;&nbsp;</lable>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" data-dismiss="modal" @click="addRow">确认</button>
                </div>
            </div>
        </div>
    </div>
</div>
{{#section 'jquery'}}
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/vendor/jquery.ui.widget.min.js"></script>
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/jquery.iframe-transport.min.js"></script>
<!-- The basic File Upload plugin -->
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/jquery.fileupload.min.js"></script>
<script>
    var imageArr=[{
        url:'',
        name:'',
        price:null,
        totalNum:null,
        mark:''
    }]; 
    var wareList=[{
        ID:0,
        Name:""
    }];
    var vm=new Vue({
        el: "#AddWare",
        data: {
            checkAll: false,
            checkedRows: [],
            productImage: imageArr,
            productType:imageArr,
            newRow:{
                WID:2,
                No:'',
                Remark:'',

            },
            warehouselist:wareList,
        },
        computed:{
            productType:function () {
                var typeArr=[];
                $.each(this.productImage,function (index,item) {
                    if(item.price!=null&&item.price!=0&&item.totalNum!=null&&item.totalNum!=0){
                        typeArr.push(item);
                    }
                });
                return typeArr;
            }
        },
        methods: {
            addRow: function () {
                var product={
                    WID:this.newRow.WID,
                    Remark:this.newRow.Remark,
                    No:this.newRow.No,
                    ImageList:[],
                    ImageType:[],
                };

                $.each(this.vm.productType,function (index,item) {
                    product.ImageList.push({
                        url:item.url,
                        name:item.name,
                        price:item.price,
                        totalNum:item.totalNum,
                        mark:item.mark
                    });
                });
                $.each(this.vm.productImage,function (index,item) {
                    product.ImageList.push({
                        url:item.url,
                        name:item.name,
                        price:item.price,
                        totalNum:item.totalNum,
                        mark:item.mark
                    });
                });
                //保存数据
                //this.facilities.push(this.newRow);
                this.newRow = {};
            },
            saveRows:function () {//保存表格数据
                
            },
            delRows:function () {
                if (this.checkedRows.length <= 0){
                    alert("您未选择需要删除的数据");
                    return false;
                }
                if (!confirm("您确定要删除选择的数据吗？")){
                    return false;
                }

                for(var i=0;i<this.checkedRows.length;i++){
                    var checkedRowIndex = this.checkedRows[i];
                    this.facilities = $.grep(this.facilities,function (facility,j) {
                        return j != checkedRowIndex;
                    });
                }
                this.checkedRows = [];
            },
            selectColor:function () {
                
            }
        },
        watch: {
            'newRow.WID':function newRowWID() {
               $(".selectstock").select2('val', this.newRow.WID);
            }
        }
    });
      
$(function () {
    $("input,select,textarea").not("[type=submit]").jqBootstrapValidation(); 
    vm.productImage=[];
    vm.productType=[];
    vm.warehouselist=[];
    GetWeiStockList() ;
    var $selectStock=$('.selectstock').select2({
        ajax: {
            url: '/warehousemanage/getwarehouselistdata',
            dataType: 'json',
            // Additional AJAX parameters go here; see the end of this chapter for the full code of this example
            processResults: function (data, params) {
            params.page = params.page || 1;

                return {
                    results: data.results,
                    pagination: {
                        more: (params.page * 10) < data.count_filtered
                    }
                };
            }
        }
    });
    $(".selectstock").select2('val', vm.newRow.WID);
    $('.selectstock').on("select2:select",function (e) {
        vm.newRow.WID=$(".selectstock").select2('val');
    });

    var $selectColor=$(".selectColor").select2();

    $('#fileupload').fileupload({
        url: '/upload',
        dataType: 'json',
        //autoUpload: false,
        //acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        maxFileSize: 5000000, // 5 MB
        // Enable image resizing, except for Android and Opera,
        // which actually support image resizing, but fail to
        // send Blob objects via XHR requests:
        disableImageResize: /Android(?!.*Chrome)|Opera/
            .test(window.navigator.userAgent),
        previewMaxWidth: 100,
        previewMaxHeight: 100,
        previewCrop: true,
        singleFileUploads: false
    }).on('fileuploadadd', function (e, data) {
        data.context = $('<div/>').appendTo('#files');
        $.each(data.files, function (index, file) {
            var node = $('<p/>')
                    .append($('<span/>').text(file.name));
            //if (!index) {
            //    node
            //        .append('<br>')
            //        .append(uploadButton.clone(true).data(data));
            //}
            node.appendTo(data.context);
        });
    }).on('fileuploadprocessalways', function (e, data) {
        var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
        if (file.preview) {
            node
                .prepend('<br>')
                .prepend(file.preview);
        }
        if (file.error) {
            node
                .append('<br>')
                .append($('<span class="text-danger"/>').text(file.error));
        }
        if (index + 1 === data.files.length) {
            data.context.find('button')
                .text('Upload')
                .prop('disabled', !!data.files.error);
        }
    }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
    }).on('fileuploaddone', function (e, data) {
        $.each(data.result.files,function (index,file) {
            vm.productImage.push({
                name:file.name,
                url:WeiWeiHost+file.path,
                price:0,
                totalNum:0,
                mark:''
            });
        });
    }).on('fileuploadfail', function (e, data) {
        $.each(data.files, function (index, file) {
            var error = $('<span class="text-danger"/>').text('File upload failed.');
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        });
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
    }); 
    function GetWeiStockList() {
        $.ajax({
            url: '/warehousemanage/getwarehouselist',
            dataType: 'json',
            type: 'get',
            data: {
                test: 'ajax'
            },
            success: function (data) {
                console.log(data);
                vm.warehouselist=[];
                $.each(data.result.rows,function (i,obj) {
                    vm.warehouselist.push(obj);
                });
                vm.newRow.WID=2;
            }
        })
    };
</script>
{{/section}}
