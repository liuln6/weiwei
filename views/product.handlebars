
{{#section 'title'}}<title>产品入库</title>
<link href="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/css/jquery.fileupload-ui-noscript.min.css" rel="stylesheet">
<link href="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/css/jquery.fileupload.min.css" rel="stylesheet">
{{/section}}
<div class="container-fluid" id="AddWare">
    <form id="productform" class="needs-validation p18" @submit.prevent="validateBeforeSubmit">
        <div class="row text-center">
           <span class="btn imageAdd fileinput-button col align-self-center">
                <span class="fa-stack fa-3x">
                  <span class="fa fa-square-o fa-stack-2x"></span>
                  <span class="fa fa-plus fa-stack-1x"></span></br>
                  点击上传
                </span>
                <!-- The file input field used as target for the file upload widget -->
                <input id="fileupload" type="file" name="files[]"  multiple="">
            </span>
        </div>
        <div class="row">
            <div class="card float-left w-25" v-for="(item,index) in productImage">
                <img class="card-img-top jqthumb" :src="item.url" v-model="productImage[index].url">
                <div class="p-2">
                    <div class="form-group col-md-4">
                        <label :for="'totalNumber_'+index" class="text-muted">米数</label>
                        <input type="number" min="0" :name="'totalNumber_'+index" :value="item.totalNum" class="w-100" v-model="productImage[index].totalNum">
                    </div>  
                    <div class="form-group col-md-4">
                        <label :for="'price_'+index" class="text-muted">价格</label>
                        <input type="num" min="0" :name="'price_'+index" :value="item.price" class="w-100" v-model="productImage[index].price">
                    </div>
                    <div class="form-group col-md-4">
                        <label :for="'mark_'+index" class="text-muted">标识</label>
                        <input type="text" :name="'mark_'+index" :value="item.mark" placeholder="颜色" class="w-100" v-model="productImage[index].mark">
                    </div>  
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="No">编号</label>
                <input type="text" data-vv-delay="500" v-model="newRow.No" class="form-control" name="No">
                
            </div>
            <div class="form-group col-md-8">
                <label >仓库</label>
                <div>
                    <div class="form-check form-check-inline" v-for="(ware,wareIndex) in warehouselist">
                      <input class="form-check-input" v-model="newRow.WID" type="radio" name="warehouseSelect" v-bind:value="ware.ID" v-bind:id="'warehouse_'+wareIndex">
                      <label class="form-check-label" :for="'warehouse_'+wareIndex">\{{ware.Name}}</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group w-100">
                <label for="ProductName">名称</label>
                <textarea name="ProductName" v-model="newRow.ProductName" :class="{'is-invalid':errors.has('ProductName'),'form-control':true}" v-validate="'required'" data-vv-delay="500"></textarea>
                 <i v-show="errors.has('ProductName')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('ProductName')" class="help text-danger">\{{ errors.first('ProductName') }}</span>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group w-100">
                <label>幅宽</label>
                <div>
                    <div class="form-check form-check-inline" v-for="(item,index) in widthList">
                        <input type="radio" name="widthList" class="form-check-input" v-model="newRow.Width" v-bind:value="item.value" v-bind:id="'widthList_'+index">
                        <label class="form-check-label" :for="'widthList_'+index">\{{item.text}}</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group w-100">
                <label for="Remark">描述信息</label>
                <textarea name="Remark" v-model="newRow.Remark" :class="{'is-invalid':errors.has('Remark'),'form-control':true}" v-validate="'required'" data-vv-delay="500"></textarea>
                 <i v-show="errors.has('Remark')" class="fa text-danger fa-warning"></i>
                <span v-show="errors.has('Remark')" class="help text-danger">\{{ errors.first('Remark') }}</span>
            </div>
        </div>
        <button class="btn btn-primary" type="submit">保存</button>
    </form>
    <div class="h8"></div>
    <table id="productList" class="table table-striped table-bordered table-sm" style="width:100%">
    </table>
</div>
{{#section 'jquery'}}
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/vendor/jquery.ui.widget.min.js"></script>
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/jquery.iframe-transport.min.js"></script>
<!-- The basic File Upload plugin -->
<script src="https://cdn.bootcss.com/blueimp-file-upload/9.21.0/js/jquery.fileupload.min.js"></script>

<script>
    Vue.use(VeeValidate,{locale: 'zh_CN'});

    var controlUrl="/product/";
    var imageArr=[{
        id:0,
        url:'',
        price:null,
        totalNum:null,
        mark:''
    }]; 
    var wareList=[{
        ID:0,
        Name:""
    }];
    var productWidthList=[{text:'1.1',value:1.1},{text:'1.14',value:1.14},{text:'1.35',value:1.35},{text:'1.4',value:1.4},{text:'1.45',value:1.45},{text:'1.5',value:1.5},{text:'1.7',value:1.7},{text:'1.8',value:1.8},{text:'1.9',value:1.9},{text:'2.3',value:2.3},{text:'2.5',value:2.5},{text:'2.8',value:2.8},{text:'其它',value:0}];
    var vm=new Vue({
        el: "#AddWare",
        data: {
            checkAll: false,
            checkedRows: [],
            productImage: imageArr,
            productType:imageArr,
            widthList:productWidthList,
            newRow:{
                WID:2,
                No:'',
                Remark:'',
                ProductName:'',
                Width:1.1,
            },
            warehouselist:wareList
        },
        methods: {
            validateBeforeSubmit:function () {
                this.$validator.validateAll().then((result) => {
                    if (result) {
                      this.saveRows();
                      return;
                    }
                  });
            },
            appendStock:function (Price,TypeID) {
                swal({
                      title: '追加库存',
                      input: 'number',
                      showCancelButton: true,
                      confirmButtonText: '确认',
                      showLoaderOnConfirm: true,
                      allowOutsideClick: false
                    }).then(function(number) {
                        var TypeID=parseInt(obj.TypeID);
                        var TotalNumber=parseFloat(number.value);
                         axios.post('/product/eidttype',{TypeID:TypeID,TotalNumber:TotalNumber,Price:obj.Price})
                        .then(function (response) {
                            obj.TotalNumber=obj.TotalNumber+TotalNumber;
                            swal.close();
                            toastr.success('设置成功了~', '')
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                      
                    })
            },
            saveRows:function () {
                //保存表格数据
                var product={
                    WID:this.newRow.WID,
                    Remark:this.newRow.Remark,
                    No:this.newRow.No,
                    ProductName:this.newRow.ProductName,
                    Width:this.newRow.Width,
                    TotalNumber:0,
                    ImageList:[],
                    ImageType:[],
                };
                if(vm.productImage){
                    $.each(vm.productImage,function (index,item) {
                        if(item.price!=null&&item.price!=0&&item.totalNum!=null&&item.totalNum!=0){
                            product.ImageType.push({
                            url:item.url,
                            id:item.id,
                            price:item.price,
                            totalNum:item.totalNum,
                            mark:item.mark
                            });
                            product.TotalNumber+=parseInt(item.totalNum);
                        }
                        product.ImageList.push({
                            url:item.url,
                            id:item.id,
                            price:item.price,
                            totalNum:item.totalNum,
                            mark:item.mark
                        });
                    });
                }
                if(product.ImageType.length==0){
                    swal("", "亲，忘记图片下的米数跟价格信息的填写了,至少填写一个哦~","warning")
                }else{
                   //保存数据
                    swal({title:"<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i><span class=\"sr-only\">Loading...</span>数据处理中，请稍后"});
                    axios.post(controlUrl+'add',product)
                    .then(function (response) {
                        var rows=[];
                        $.each(product.ImageType,function (index,item) {
                            rows.push({
                                PID:response.data.productID,
                                ProductName:product.ProductName,
                                TypeName:item.mark,
                                StockNumber:item.totalNum,
                                TypeID:0,
                                Price:item.price
                            });
                        });
                        $('#productList').DataTable().rows.add(rows).draw();

                        $('#productform')[0].reset();
                        vm.productImage=[];
                        vm.newRow.WID=2;
                        vm.newRow.No='',
                        vm.newRow.Remark='',
                        vm.newRow.ProductName='',
                        vm.newRow.Width=1.1,
                        swal.close();
                        toastr.success('数据添加成功了，恭喜亲~', '')
                    })
                    .catch(function (error) {
                        console.log(error);
                    }); 
                }
                
            }
        },
        watch: {
            'newRow.WID':function newRowWID() {
               $(".selectstock").select2('val', this.newRow.WID);
            }
        }
    });
      
$(function () {
    vm.productImage=[];
    vm.productType=[];
    vm.warehouselist=[];
    GetWeiStockList() ;

    $('#productList').DataTable({
        language: {
            url: '/script/Chinese.json'
        },
        "lengthMenu": [[25, 50, -1], [25, 50, "All"]],
        ajax:{
            url:'/product/getProductAllList' ,
            "dataSrc": ""
        },
        columns:[
            {
                data:'PID',
                title:'产品ID'
            },
            {
                data:'ProductName',
                title:'名称',
                render:function (data,type,row) {
                        return '<a class="btn btn-link" href="/product/info?ID='+row.PID+'" role="button">'+row.ProductName+'</a>';
                    }
            },
            {
                data:'TypeName',
                title:'标识'
            },
            {
                data:'TypeID',
                title:'标识ID'
            },
            {
                data:'StockNumber',
                title:'库存',
                render:function (data,type,row) {
                        return row.StockNumber +'<button type="button" class="btn btn-info btn-sm" onclick="appendStock('+row.Price+','+row.TypeID+')">追加库存</button>';
                    }
            },
            {
                data:'Price',
                title:'价格'
            }
            //,
            //{
             //   data:null,
            //    title:'操作',
            //    render:function (data,type,row) {
            //            return '<a class="btn btn-link btn-primary" href="/product/editproduct?ID='+row.PID+'" role="button">'+编辑+'</a>';
            //        }
            //}             
        ]
    });

    $('#fileupload').fileupload({
        url: '/product/upload',
        dataType: 'json',
        //autoUpload: false,
        //acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        maxFileSize: 5000000, // 5 MB
        // Enable image resizing, except for Android and Opera,
        // which actually support image resizing, but fail to
        // send Blob objects via XHR requests:
        disableImageResize: /Android(?!.*Chrome)|Opera/
            .test(window.navigator.userAgent),
        previewMaxWidth: 100,
        previewMaxHeight: 100,
        previewCrop: true,
        singleFileUploads: false
    }).on('fileuploadadd', function (e, data) {
        data.context = $('<div/>').appendTo('#files');
        $.each(data.files, function (index, file) {
            var node = $('<p/>')
                    .append($('<span/>').text(file.name));
            //if (!index) {
            //    node
            //        .append('<br>')
            //        .append(uploadButton.clone(true).data(data));
            //}
            node.appendTo(data.context);
        });
    }).on('fileuploadprocessalways', function (e, data) {
        var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
        if (file.preview) {
            node
                .prepend('<br>')
                .prepend(file.preview);
        }
        if (file.error) {
            node
                .append('<br>')
                .append($('<span class="text-danger"/>').text(file.error));
        }
        if (index + 1 === data.files.length) {
            data.context.find('button')
                .text('Upload')
                .prop('disabled', !!data.files.error);
        }
    }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
    }).on('fileuploaddone', function (e, data) {
        $.each(data.result,function (index,file) {
            vm.productImage.push({
                id:file.id,
                url:WeiWeiHost+file.url,
                price:0,
                totalNum:0,
                mark:''
            });
        });
    }).on('fileuploadfail', function (e, data) {
        $.each(data.files, function (index, file) {
            var error = $('<span class="text-danger"/>').text('File upload failed.');
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        });
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
    }); 
    function GetWeiStockList() {
        $.ajax({
            url: '/product/getwarehouselist',
            dataType: 'json',
            type: 'get',
            data: {
                test: 'ajax'
            },
            success: function (data) {
                console.log(data);
                vm.warehouselist=[];
                $.each(data.result.rows,function (i,obj) {
                    vm.warehouselist.push(obj);
                });
                vm.newRow.WID=2;
            }
        })
    };
</script>
{{/section}}
